//
// File: FIRDecimator.cpp
//
// MATLAB Coder version            : 5.1
// C/C++ source code generated on  : 19-Apr-2022 11:19:13
//

// Include Files
#include "FIRDecimator.h"
#include "HS_EWL_RECEIVE_types.h"
#include "rt_nonfinite.h"
#include <cstring>

// Function Declarations
static int div_nde_s32_floor(int numerator, int denominator);

// Function Definitions
//
// Arguments    : void
// Return Type  : void
//
namespace coder
{
  namespace dspcodegen
  {
    void FIRDecimator::setup()
    {
      this->isSetupComplete = false;
      this->isInitialized = 1;
      this->isSetupComplete = true;
    }

    //
    // Arguments    : void
    // Return Type  : void
    //
    void FIRDecimator::setupAndReset()
    {
      this->setup();

      // System object Initialization function: dsp.FIRDecimator
      this->cSFunObject.W2_CoeffIdx = 561;
      this->cSFunObject.W0_PhaseIdx = 51;
      this->cSFunObject.W4_TapDelayIndex = 510;
      this->cSFunObject.W1_Sums.re = 0.0;
      this->cSFunObject.W1_Sums.im = 0.0;
      std::memset(&this->cSFunObject.W3_StatesBuff[0], 0, 520U * sizeof(creal_T));
      this->cSFunObject.W5_PrevNumChan = -1;
    }

    //
    // Arguments    : int numerator
    //                int denominator
    // Return Type  : int
    //
  }
}

static int div_nde_s32_floor(int numerator, int denominator)
{
  int b_numerator;
  if (((numerator < 0) != (denominator < 0)) && (numerator % denominator != 0))
  {
    b_numerator = -1;
  } else {
    b_numerator = 0;
  }

  return numerator / denominator + b_numerator;
}

//
// Arguments    : void
// Return Type  : void
//
namespace coder
{
  namespace dspcodegen
  {
    FIRDecimator::FIRDecimator()
    {
      this->matlabCodegenIsDeleted = true;
    }

    //
    // Arguments    : void
    // Return Type  : void
    //
    FIRDecimator::~FIRDecimator()
    {
      this->matlabCodegenDestructor();
    }

    //
    // Arguments    : void
    // Return Type  : void
    //
    void FIRDecimator::handle_matlabCodegenDestructor()
    {
      if (!this->matlabCodegenIsDeleted) {
        this->matlabCodegenIsDeleted = true;
        this->release();
      }
    }

    //
    // Arguments    : void
    // Return Type  : FIRDecimator *
    //
    FIRDecimator *FIRDecimator::init()
    {
      static const double dv[572] = { -0.00036743929862657079,
        -0.0010192583793142656, -0.0029198618852883766, -0.013591609653914798,
        0.17256043169859689, -0.013793781012808488, -0.002608085551947738,
        -0.00078838739211782875, -0.00020549888551812278, 2.9137453097403536E-5,
        0.0, -0.0004404043709590555, -0.0011130823477954444,
        -0.003015610379703867, -0.013252559838962853, 0.17190517336080235,
        -0.013626652071648638, -0.0023930967559687767, -0.00065369235242896783,
        -0.00011848258474826765, 8.573518990623034E-5, 0.0,
        -0.000506871136137894, -0.0011912847819685584, -0.0030714294998961016,
        -0.012775693653053657, 0.17081707591769221, -0.013261483972710165,
        -0.0021402841587729849, -0.00050806040149236373, -2.8863818148378216E-5,
        0.00014170931721646317, 0.0, -0.00056609118208155622,
        -0.0012532303785790873, -0.00308805428796927, -0.012176918348999331,
        0.16930210888502512, -0.012684765628870352, -0.0018515036182491556,
        -0.000353150310503016, 6.2213265713463136E-5, 0.00019630490368922321,
        0.0, -0.00061742382940722961, -0.0012985074591361193,
        -0.0030666785613751441, -0.011472208592683475, 0.16736856951329818,
        -0.011883878317696283, -0.0015291494851178177, -0.00019078687245848566,
        0.00015356255712724019, 0.00024877324381626675, 0.0,
        -0.00066034232053121926, -0.0013269276148984057, -0.003008923878663001,
        -0.010677475079896904, 0.1650270233124605, -0.010847228158529888,
        -0.0011761469754302885, -2.29418166043007E-5, 0.0002439706261938708,
        0.00029838177034640907, 0.0, -0.00069443844474180894,
        -0.001338522584151895, -0.0029168046138585832, -0.0098084378595531055,
        0.16229022842947655, -0.0095643738887280366, -0.00079593799848795544,
        0.00014828763921804087, 0.00033221200412736883, 0.00034442391124395156,
        0.0, -0.00071942556931411245, -0.0013335384654476251,
        -0.0027926896591550939, -0.0088805053484746974, 0.15917304450256575,
        -0.008026148730191562, -0.00039246037102754882, 0.0003207023904388436,
        0.000417064921102161, 0.00038622876235198239, 0.0,
        -0.0007351400672847971, -0.0013124274004650354, -0.0026392612975795564,
        -0.00790865995018494, 0.1556923267430271, -0.0062247751675829754,
        2.9879581237584809E-5, 0.0004920269623292637, 0.00049732730752597592,
        0.00042317044733118013, 0.0, -0.000741541152810395,
        -0.0012758368878993407, -0.0024594718028132338, -0.0069073511102304341,
        0.15186680611586942, -0.0041539715012338767, 0.00046624096155640837,
        0.00065993667228964243, 0.00057183285857061845, 0.00045467703849952265,
        0.0, -0.00073870915484866833, -0.0012245969149594328,
        -0.0022564983323765725, -0.0058903965543789169, 0.1477169566029562,
        -0.0018090490904377663, 0.00091138863322494065, 0.00082208614197497461,
        0.000639466957141671, 0.00048023891590881019, 0.0, -0.000726842278990401,
        -0.0011597051154570233, -0.0020336966829886107, -0.0048708923645060988,
        0.1432648506360252, 0.00081300073374371241, 0.0013597397239747545,
        0.000976138839421799, 0.00069918224831601371, 0.00049941644733739079,
        0.0, -0.00070625192540442353, -0.0010823101828588083,
        -0.0017945544731988586, -0.0038611324510725293, 0.13853400388085141,
        0.0037134310333243907, 0.0018054160107578122, 0.0011197973106857519,
        0.00075001365869525492, 0.00051184687881131684, 0.0,
        -0.00067735664783233134, -0.00099369378289120036, -0.0015426443085524311,
        -0.0028725378817897477, 0.13354921063716096, 0.0068916757696310289,
        0.0022423018201855509, 0.0012508337434642594, 0.00079109265715627825,
        0.0005172503337238254, 0.0, -0.000640674854189779,
        -0.00089525122320271045, -0.0012815774688368085, -0.0019155964243986166,
        0.12833637119095309, 0.010345299222216157, 0.0026641070100686262,
        0.001367120492047734, 0.00082166055913691644, 0.00051543482852047092,
        0.0, -0.00059681636342680028, -0.00078847114711502145,
        -0.0010149586356789822, -0.00099981255845114718, 0.12292231251604267,
        0.014069958990980728, 0.0030644345305022294, 0.0014666601839607651,
        0.00084108068485331394, 0.00050630022415005063, 0.0,
        -0.00054647294572031271, -0.00067491452458488951,
        -0.00074634215227849156, -0.00013366810762175253, 0.11733460376935805,
        0.018059383143856151, 0.0034368519995206918, 0.0015476150240223833,
        0.00084884919265092792, 0.000489841044926513, 0.0,
        -0.00049040798369107315, -0.00055619321615176681, -0.0004791902757872851,
        0.00067540645861876507, 0.11160136805951726, 0.022305361957703631,
        0.0037749666692543488, 0.00160833491142555, 0.00084460442195573445,
        0.00046614810996405614, 0.0, -0.00042944540105235884,
        -0.00043394838489797528, -0.00021683384723774382, 0.0014210501061684712,
        0.10575109199007914, 0.026797754579882985, 0.0040725031044783078,
        0.001647383989914836, 0.00082813459589663272, 0.00043540893678051576,
        0.0, -0.00036445801183135763, -0.00030982902737677388,
        3.7564235528458744E-5, 0.0020979788509235694, 0.099812434487598911,
        0.031524510813290191, 0.0043233828471250582, 0.0016635652602799012,
        0.00079938375146344266, 0.00039790689184293518, 0.0,
        -0.00029635544800529453, -0.00018547088718437693, 0.0002810423992406636,
        0.0027019831523955123, 0.093814036420115945, 0.036471708099671818,
        0.0045218052983718388, 0.0016559428981800751, 0.0007584557848666864,
        0.00035401907857171376, 0.0, -0.00022607182603722278,
        -6.2476004516632243E-5, 0.00051087033372117468, 0.0032299154223510446,
        0.087784332494111619, 0.041623603645852596, 0.0046623290148852014,
        0.0016238619387160848, 0.00070561652136685729, 0.00030421296943398317,
        0.0, -0.00015455331338191786, 5.7606858154888225E-5,
        0.00072457523809334829, 0.0036796680698279317, 0.081751366887506,
        0.046962701506345884, 0.0047399525882236872, 0.001566965012058484,
        0.00064129374200715648, 0.00024904180504329405, 0.0,
        -8.2745754586276528E-5, 0.000173300690012891, 0.00091996417453780739,
        0.0040501425832633, 0.075742614033278241, 0.052469834304859554,
        0.0047501942567110145, 0.0014852058416631115, 0.00056607512415640453,
        0.00018913879943609021, 0.0, -1.1582513182205961E-5,
        0.00028321739942647155, 0.0010951423797922147, 0.0043412102232508977,
        0.069784805913244485, 0.058124259147677264, 0.00468916938766828,
        0.0013788592479329444, 0.00048070407826843404, 0.00012521020670856945,
        0.0, 5.8027319762258933E-5, 0.00038607348949372633,
        0.0012485274353513627, 0.0045536649650277355, 0.063903767154998029,
        0.063903767154998029, 0.0045536649650277355, 0.0012485274353513627,
        0.00038607348949372633, 5.8027319762258933E-5, 0.0,
        0.00012521020670856945, 0.00048070407826843404, 0.0013788592479329444,
        0.00468916938766828, 0.058124259147677264, 0.069784805913244485,
        0.0043412102232508977, 0.0010951423797922147, 0.00028321739942647155,
        -1.1582513182205961E-5, 0.0, 0.00018913879943609021,
        0.00056607512415640453, 0.0014852058416631115, 0.0047501942567110145,
        0.052469834304859554, 0.075742614033278241, 0.0040501425832633,
        0.00091996417453780739, 0.000173300690012891, -8.2745754586276528E-5,
        0.0, 0.00024904180504329405, 0.00064129374200715648,
        0.001566965012058484, 0.0047399525882236872, 0.046962701506345884,
        0.081751366887506, 0.0036796680698279317, 0.00072457523809334829,
        5.7606858154888225E-5, -0.00015455331338191786, 0.0,
        0.00030421296943398317, 0.00070561652136685729, 0.0016238619387160848,
        0.0046623290148852014, 0.041623603645852596, 0.087784332494111619,
        0.0032299154223510446, 0.00051087033372117468, -6.2476004516632243E-5,
        -0.00022607182603722278, 0.0, 0.00035401907857171376,
        0.0007584557848666864, 0.0016559428981800751, 0.0045218052983718388,
        0.036471708099671818, 0.093814036420115945, 0.0027019831523955123,
        0.0002810423992406636, -0.00018547088718437693, -0.00029635544800529453,
        0.0, 0.00039790689184293518, 0.00079938375146344266,
        0.0016635652602799012, 0.0043233828471250582, 0.031524510813290191,
        0.099812434487598911, 0.0020979788509235694, 3.7564235528458744E-5,
        -0.00030982902737677388, -0.00036445801183135763, 0.0,
        0.00043540893678051576, 0.00082813459589663272, 0.001647383989914836,
        0.0040725031044783078, 0.026797754579882985, 0.10575109199007914,
        0.0014210501061684712, -0.00021683384723774382, -0.00043394838489797528,
        -0.00042944540105235884, 0.0, 0.00046614810996405614,
        0.00084460442195573445, 0.00160833491142555, 0.0037749666692543488,
        0.022305361957703631, 0.11160136805951726, 0.00067540645861876507,
        -0.0004791902757872851, -0.00055619321615176681, -0.00049040798369107315,
        0.0, 0.000489841044926513, 0.00084884919265092792, 0.0015476150240223833,
        0.0034368519995206918, 0.018059383143856151, 0.11733460376935805,
        -0.00013366810762175253, -0.00074634215227849156,
        -0.00067491452458488951, -0.00054647294572031271, 0.0,
        0.00050630022415005063, 0.00084108068485331394, 0.0014666601839607651,
        0.0030644345305022294, 0.014069958990980728, 0.12292231251604267,
        -0.00099981255845114718, -0.0010149586356789822, -0.00078847114711502145,
        -0.00059681636342680028, 0.0, 0.00051543482852047092,
        0.00082166055913691644, 0.001367120492047734, 0.0026641070100686262,
        0.010345299222216157, 0.12833637119095309, -0.0019155964243986166,
        -0.0012815774688368085, -0.00089525122320271045, -0.000640674854189779,
        0.0, 0.0005172503337238254, 0.00079109265715627825,
        0.0012508337434642594, 0.0022423018201855509, 0.0068916757696310289,
        0.13354921063716096, -0.0028725378817897477, -0.0015426443085524311,
        -0.00099369378289120036, -0.00067735664783233134, 0.0,
        0.00051184687881131684, 0.00075001365869525492, 0.0011197973106857519,
        0.0018054160107578122, 0.0037134310333243907, 0.13853400388085141,
        -0.0038611324510725293, -0.0017945544731988586, -0.0010823101828588083,
        -0.00070625192540442353, 0.0, 0.00049941644733739079,
        0.00069918224831601371, 0.000976138839421799, 0.0013597397239747545,
        0.00081300073374371241, 0.1432648506360252, -0.0048708923645060988,
        -0.0020336966829886107, -0.0011597051154570233, -0.000726842278990401,
        0.0, 0.00048023891590881019, 0.000639466957141671,
        0.00082208614197497461, 0.00091138863322494065, -0.0018090490904377663,
        0.1477169566029562, -0.0058903965543789169, -0.0022564983323765725,
        -0.0012245969149594328, -0.00073870915484866833, 0.0,
        0.00045467703849952265, 0.00057183285857061845, 0.00065993667228964243,
        0.00046624096155640837, -0.0041539715012338767, 0.15186680611586942,
        -0.0069073511102304341, -0.0024594718028132338, -0.0012758368878993407,
        -0.000741541152810395, 0.0, 0.00042317044733118013,
        0.00049732730752597592, 0.0004920269623292637, 2.9879581237584809E-5,
        -0.0062247751675829754, 0.1556923267430271, -0.00790865995018494,
        -0.0026392612975795564, -0.0013124274004650354, -0.0007351400672847971,
        0.0, 0.00038622876235198239, 0.000417064921102161, 0.0003207023904388436,
        -0.00039246037102754882, -0.008026148730191562, 0.15917304450256575,
        -0.0088805053484746974, -0.0027926896591550939, -0.0013335384654476251,
        -0.00071942556931411245, 0.0, 0.00034442391124395156,
        0.00033221200412736883, 0.00014828763921804087, -0.00079593799848795544,
        -0.0095643738887280366, 0.16229022842947655, -0.0098084378595531055,
        -0.0029168046138585832, -0.001338522584151895, -0.00069443844474180894,
        0.0, 0.00029838177034640907, 0.0002439706261938708, -2.29418166043007E-5,
        -0.0011761469754302885, -0.010847228158529888, 0.1650270233124605,
        -0.010677475079896904, -0.003008923878663001, -0.0013269276148984057,
        -0.00066034232053121926, 0.0, 0.00024877324381626675,
        0.00015356255712724019, -0.00019078687245848566, -0.0015291494851178177,
        -0.011883878317696283, 0.16736856951329818, -0.011472208592683475,
        -0.0030666785613751441, -0.0012985074591361193, -0.00061742382940722961,
        0.0, 0.00019630490368922321, 6.2213265713463136E-5,
        -0.000353150310503016, -0.0018515036182491556, -0.012684765628870352,
        0.16930210888502512, -0.012176918348999331, -0.00308805428796927,
        -0.0012532303785790873, -0.00056609118208155622, 0.0,
        0.00014170931721646317, -2.8863818148378216E-5, -0.00050806040149236373,
        -0.0021402841587729849, -0.013261483972710165, 0.17081707591769221,
        -0.012775693653053657, -0.0030714294998961016, -0.0011912847819685584,
        -0.000506871136137894, 0.0, 8.573518990623034E-5,
        -0.00011848258474826765, -0.00065369235242896783, -0.0023930967559687767,
        -0.013626652071648638, 0.17190517336080235, -0.013252559838962853,
        -0.003015610379703867, -0.0011130823477954444, -0.0004404043709590555,
        0.0, 2.9137453097403536E-5, -0.00020549888551812278,
        -0.00078838739211782875, -0.002608085551947738, -0.013793781012808488,
        0.17256043169859689, -0.013591609653914798, -0.0029198618852883766,
        -0.0010192583793142656, -0.00036743929862657079, 0.0,
        -2.7332576347812759E-5, -0.00028882436125885684, -0.00091066932012203187,
        -0.0027839344014433461, -0.013777138297734763, 0.17277925198705479,
        -0.013777138297734763, -0.0027839344014433461, -0.00091066932012203187,
        -0.00028882436125885684, -2.7332576347812759E-5 };

      FIRDecimator *obj;
      obj = this;
      obj->isInitialized = 0;

      // System object Constructor function: dsp.FIRDecimator
      obj->cSFunObject.P0_IC.re = 0.0;
      obj->cSFunObject.P0_IC.im = 0.0;
      for (int i = 0; i < 572; i++) {
        obj->cSFunObject.P1_FILT[i] = dv[i];
      }

      obj->matlabCodegenIsDeleted = false;
      return obj;
    }

    //
    // Arguments    : void
    // Return Type  : void
    //
    void FIRDecimator::matlabCodegenDestructor()
    {
      if (!this->matlabCodegenIsDeleted) {
        this->matlabCodegenIsDeleted = true;
        this->release();
      }
    }

    //
    // Arguments    : void
    // Return Type  : void
    //
    void FIRDecimator::release()
    {
      if (this->isInitialized == 1) {
        this->isInitialized = 2;
      }
    }

    //
    // Arguments    : void
    // Return Type  : void
    //
    void FIRDecimator::reset()
    {
      if (this->isInitialized == 1) {
        // System object Initialization function: dsp.FIRDecimator
        this->cSFunObject.W2_CoeffIdx = 561;
        this->cSFunObject.W0_PhaseIdx = 51;
        this->cSFunObject.W4_TapDelayIndex = 510;
        this->cSFunObject.W1_Sums.re = 0.0;
        this->cSFunObject.W1_Sums.im = 0.0;
        std::memset(&this->cSFunObject.W3_StatesBuff[0], 0, 520U * sizeof
                    (creal_T));
        this->cSFunObject.W5_PrevNumChan = -1;
      }
    }

    //
    // Arguments    : const emxArray_creal_T *varargin_1
    //                creal_T varargout_1_data[]
    //                int varargout_1_size[2]
    // Return Type  : void
    //
    void FIRDecimator::step(const emxArray_creal_T *varargin_1, creal_T
      varargout_1_data[], int varargout_1_size[2])
    {
      dsp_FIRDecimator_0 *obj;
      int curTapIdx;
      int inputIdx;
      int maxWindow;
      if (this->isInitialized != 1) {
        this->setupAndReset();
      }

      obj = &this->cSFunObject;

      // System object Outputs function: dsp.FIRDecimator
      this->cSFunObject.O0_Y0.size[0] = static_cast<int>(static_cast<double>
        (varargin_1->size[0]) / 52.0);
      this->cSFunObject.O0_Y0.size[1] = 1;
      if (this->cSFunObject.W5_PrevNumChan == -1) {
        this->cSFunObject.W5_PrevNumChan = 1;
      }

      this->cSFunObject.O0_Y0.size[0] = div_nde_s32_floor(varargin_1->size[0],
        52);
      this->cSFunObject.O0_Y0.size[1] = 1;
      if (varargin_1->size[0] != 0) {
        int cffIdx;
        int outBufIdx;
        int phaseIdx;
        inputIdx = 0;
        curTapIdx = obj->W4_TapDelayIndex;
        phaseIdx = obj->W0_PhaseIdx;
        cffIdx = obj->W2_CoeffIdx;
        outBufIdx = 0;
        maxWindow = (phaseIdx + 1) * 10;
        for (int iIdx = 0; iIdx < varargin_1->size[0]; iIdx++) {
          int jIdx;
          obj->W1_Sums.re += varargin_1->data[inputIdx].re * obj->P1_FILT[cffIdx];
          obj->W1_Sums.im += varargin_1->data[inputIdx].im * obj->P1_FILT[cffIdx];
          cffIdx++;
          for (jIdx = curTapIdx + 1; jIdx < maxWindow; jIdx++) {
            obj->W1_Sums.re += obj->W3_StatesBuff[jIdx].re * obj->P1_FILT[cffIdx];
            obj->W1_Sums.im += obj->W3_StatesBuff[jIdx].im * obj->P1_FILT[cffIdx];
            cffIdx++;
          }

          for (jIdx = maxWindow - 10; jIdx <= curTapIdx; jIdx++) {
            obj->W1_Sums.re += obj->W3_StatesBuff[jIdx].re * obj->P1_FILT[cffIdx];
            obj->W1_Sums.im += obj->W3_StatesBuff[jIdx].im * obj->P1_FILT[cffIdx];
            cffIdx++;
          }

          obj->W3_StatesBuff[curTapIdx] = varargin_1->data[inputIdx];
          inputIdx++;
          curTapIdx += 10;
          if (curTapIdx >= 520) {
            curTapIdx -= 520;
          }

          phaseIdx++;
          if (phaseIdx < 52) {
            maxWindow += 10;
          } else {
            obj->O0_Y0.data[outBufIdx] = obj->W1_Sums;
            outBufIdx++;
            obj->W1_Sums.re = 0.0;
            obj->W1_Sums.im = 0.0;
            phaseIdx = 0;
            cffIdx = 0;
            curTapIdx--;
            if (curTapIdx < 0) {
              curTapIdx += 10;
            }

            maxWindow = 10;
          }
        }

        this->cSFunObject.W4_TapDelayIndex = curTapIdx;
        this->cSFunObject.W2_CoeffIdx = cffIdx;
        this->cSFunObject.W0_PhaseIdx = phaseIdx;
      }

      varargout_1_size[0] = this->cSFunObject.O0_Y0.size[0];
      varargout_1_size[1] = this->cSFunObject.O0_Y0.size[1];
      inputIdx = this->cSFunObject.O0_Y0.size[0] * this->cSFunObject.O0_Y0.size
        [1];
      for (curTapIdx = 0; curTapIdx < inputIdx; curTapIdx++) {
        varargout_1_data[curTapIdx] = this->cSFunObject.O0_Y0.data[curTapIdx];
      }
    }
  }
}

//
// File trailer for FIRDecimator.cpp
//
// [EOF]
//
